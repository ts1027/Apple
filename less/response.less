@import "var.less";

.pad(@padding){
  padding-left: @padding;
  padding-right: @padding;
}
.container{
  &{
    display: block;
    height:auto;
    margin-left:auto!important;
    margin-right:auto!important;
    .pad(@padding);
  }
  &-fluid{
    display: block;
    height: auto;
    .pad(@padding);
  }

  & .row,&-fluid .row{
    margin-left:-@padding;
    margin-right:-@padding;
    display: block;
  }

  & .row:after,&-fluid .row:after{
    content: '';
    display: block;
    height: 0;
    line-height:0;
    clear: both;
  }
}

.grid(@type,@i:1) when(@i<=@cols){
    .col-@{type}-@{i}{
       width:100% / @cols * @i;
       float: left;
       display: block;
       .pad(@padding);
    }
  .grid(@type,@i+1);
}
//手机端
.grid(xs);

.g(@width,@name){
  @media screen and (min-width:@width){
     .container{
        width:@width - @padding * 2;
        display: block;
     }
    .grid(@name);
  }
}

//平板端
.g(@smscreen,sm);

//小屏
.g(@mdscreen,md);

//大屏
.g(@lgscreen,lg);

//隐藏列
@media screen and (max-width:@smscreen){
  .hidden-xs{
    display: none!important;
  }
}

@media screen and (min-width:@smscreen) and (max-width:@mdscreen){
  .hidden-sm{
    display: none!important;
  }
}

@media screen and (min-width: @smscreen) and (max-width:@lgscreen){
  .hidden-md{
    display: none!important;
  }
}

@media screen and (min-width: @lgscreen){
  .hidden-lg{
    display: none!important;
  }
}